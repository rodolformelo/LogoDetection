model {
  center_net {
    num_classes: 14
    feature_extractor {
      type: "hourglass_104"
      channel_means: 104.01362
      channel_means: 114.034225
      channel_means: 119.916595
      channel_stds: 73.60277
      channel_stds: 69.89082
      channel_stds: 70.91508
      bgr_ordering: true
    }
    image_resizer {
      keep_aspect_ratio_resizer {
        min_dimension: 512
        max_dimension: 512
        pad_to_max_dimension: true
      }
    }
    object_detection_task {
      task_loss_weight: 1.0
      offset_loss_weight: 1.0
      scale_loss_weight: 0.1
      localization_loss {
        l1_localization_loss {
        }
      }
    }
    object_center_params {
      object_center_loss_weight: 1.0
      classification_loss {
        penalty_reduced_logistic_focal_loss {
          alpha: 2.0
          beta: 4.0
        }
      }
      min_box_overlap_iou: 0.7
      max_box_predictions: 100
    }
  }
}
train_config {
  batch_size: 4
  data_augmentation_options {
    random_horizontal_flip {
    }
  }
  data_augmentation_options {
    random_adjust_hue {
    }
  }
  data_augmentation_options {
    random_adjust_contrast {
    }
  }
  data_augmentation_options {
    random_adjust_saturation {
    }
  }
  data_augmentation_options {
    random_adjust_brightness {
    }
  }
  data_augmentation_options {
    random_absolute_pad_image {
      max_height_padding: 200
      max_width_padding: 200
      pad_color: 0.0
      pad_color: 0.0
      pad_color: 0.0
    }
  }
  optimizer {
    adam_optimizer {
      learning_rate {
        manual_step_learning_rate {
          initial_learning_rate: 0.0003
          schedule {
            step: 30000
            learning_rate: 0.0001
          }
          schedule {
            step: 400000
            learning_rate: 1e-05
          }
        }
      }
      epsilon: 1e-07
    }
    use_moving_average: false
  }
  fine_tune_checkpoint: "traning_directory/centernet_14_1_1/ckpt-27"
  num_steps: 50000
  max_number_of_boxes: 10
  unpad_groundtruth_tensors: false
  fine_tune_checkpoint_type: "detection"
  fine_tune_checkpoint_version: V2
}
train_input_reader {
  label_map_path: "data/logo_14_map.pbtx"
  tf_record_input_reader {
    input_path: "data/train_14.tfrecord"
  }
}
eval_config {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
  batch_size: 1
}
eval_input_reader {
  label_map_path: "data/logo_14_map.pbtx"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "data/test_14.tfrecord"
  }
}
